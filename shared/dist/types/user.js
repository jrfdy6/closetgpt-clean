"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserProfileSchema = void 0;
const zod_1 = require("zod");
exports.UserProfileSchema = zod_1.z.object({
    id: zod_1.z.string(),
    name: zod_1.z.string(),
    email: zod_1.z.string().email(),
    gender: zod_1.z.enum(['male', 'female']).optional(),
    preferences: zod_1.z.object({
        style: zod_1.z.array(zod_1.z.string()),
        colors: zod_1.z.array(zod_1.z.string()),
        occasions: zod_1.z.array(zod_1.z.string()),
        formality: zod_1.z.string().optional(),
        budget: zod_1.z.string().optional(),
        preferredBrands: zod_1.z.array(zod_1.z.string()).optional(),
        fitPreferences: zod_1.z.array(zod_1.z.string()).optional(),
    }),
    measurements: zod_1.z.object({
        height: zod_1.z.number(),
        weight: zod_1.z.number(),
        bodyType: zod_1.z.string(),
        skinTone: zod_1.z.string().optional(),
        heightFeetInches: zod_1.z.string().optional(),
        topSize: zod_1.z.string().optional(),
        bottomSize: zod_1.z.string().optional(),
        shoeSize: zod_1.z.string().optional(),
        dressSize: zod_1.z.string().optional(),
        jeanWaist: zod_1.z.string().optional(),
        braSize: zod_1.z.string().optional(),
        inseam: zod_1.z.string().optional(),
        waist: zod_1.z.string().optional(),
        chest: zod_1.z.string().optional(),
    }),
    stylePreferences: zod_1.z.array(zod_1.z.string()),
    bodyType: zod_1.z.string(),
    skinTone: zod_1.z.string().optional(),
    fitPreference: zod_1.z.enum(['fitted', 'relaxed', 'oversized', 'loose']).optional(),
    // New onboarding fields
    heightFeetInches: zod_1.z.string().optional(),
    weight: zod_1.z.union([zod_1.z.string(), zod_1.z.number()]).optional(),
    topSize: zod_1.z.string().optional(),
    bottomSize: zod_1.z.string().optional(),
    shoeSize: zod_1.z.string().optional(),
    dressSize: zod_1.z.string().optional(),
    jeanWaist: zod_1.z.string().optional(),
    braSize: zod_1.z.string().optional(),
    inseam: zod_1.z.string().optional(),
    waist: zod_1.z.string().optional(),
    chest: zod_1.z.string().optional(),
    budget: zod_1.z.string().optional(),
    preferredBrands: zod_1.z.array(zod_1.z.string()).optional(),
    fitPreferences: zod_1.z.array(zod_1.z.string()).optional(),
    quizResponses: zod_1.z.array(zod_1.z.object({
        questionId: zod_1.z.string(),
        answer: zod_1.z.union([zod_1.z.string(), zod_1.z.array(zod_1.z.string())]),
        confidence: zod_1.z.number(),
    })).optional(),
    colorPalette: zod_1.z.object({
        primary: zod_1.z.array(zod_1.z.string()),
        secondary: zod_1.z.array(zod_1.z.string()),
        accent: zod_1.z.array(zod_1.z.string()),
        neutral: zod_1.z.array(zod_1.z.string()),
        avoid: zod_1.z.array(zod_1.z.string()),
    }).optional(),
    hybridStyleName: zod_1.z.string().optional(),
    alignmentScore: zod_1.z.number().optional(),
    selfieUrl: zod_1.z.string().optional(),
    onboardingCompleted: zod_1.z.boolean().optional(),
    createdAt: zod_1.z.number(),
    updatedAt: zod_1.z.number()
});
